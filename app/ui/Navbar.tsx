'use client';
import Link from 'next/link';
import { useState } from 'react';

interface NavBarButtonProps {
  text: string;
  href?: string;
  children?: React.ReactNode;
  selected: boolean;
  onClick: () => void;
}

interface NavbarProps {
  selected: string;
}

const NavBarButton: React.FC<NavBarButtonProps> = ({ text, href = '/', selected, children, onClick }) => {
  return (
    <Link
      href={href}
      onClick={onClick}
      className={`flex flex-col w-full items-center text-[12px] text-black ${
        selected ? 'text-bpgreen' : 'border-bpgreen text-bpblack'
      } rounded-lg py-1`}
    >
      <div className="relative aspect-square h-6">{children}</div>
      {text}
    </Link>
  );
};

const Navbar: React.FC<NavbarProps> = ({ selected }) => {
  const [selectedButton, setSelectedButton] = useState(selected);

  const handleButtonClick = (buttonText: string) => {
    setSelectedButton(buttonText);
  };

  return (
    <div className="flex w-screen justify-between text-black bg-white border-t border-gray-300 px-8 py-4 gap-[10px] sticky bottom-0">
      <NavBarButton
        text={'Reabastercer'}
        selected={selectedButton === 'Reabastercer'}
        onClick={() => handleButtonClick('Reabastercer')}
      >
        <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24">
          <g fill="none" fillRule="nonzero">
            <path d="M24 0v24H0V0h24ZM12.593 23.258l-.011.002-.071.035-.02.004-.014-.004-.071-.035c-.01-.004-.019-.001-.024.005l-.004.01-.017.428.005.02.01.013.104.074.015.004.012-.004.104-.074.012-.016.004-.017-.017-.427c-.002-.01-.009-.017-.017-.018Zm.265-.113-.013.002-.185.093-.01.01-.003.011.018.43.005.012.008.007.201.093c.012.004.023 0 .029-.008l.004-.014-.034-.614c-.003-.012-.01-.02-.02-.022Zm-.715.002a.023.023 0 0 0-.027.006l-.006.014-.034.614c0 .012.007.02.017.024l.015-.002.201-.093.01-.008.004-.011.017-.43-.003-.012-.01-.01-.184-.092Z" />
            <path
              fill={selectedButton === 'Reabastercer' ? '#4CCD99' : '#1F1803'}
              d="M15 4a2 2 0 0 1 2 2v1h1.52a2 2 0 0 1 1.561.75l1.48 1.851a2 2 0 0 1 .439 1.25V15a2 2 0 0 1-2 2 3 3 0 1 1-6 0h-4a3 3 0 1 1-6 0 2 2 0 0 1-2-2V6a2 2 0 0 1 2-2h11ZM7 16a1 1 0 1 0 0 2 1 1 0 0 0 0-2Zm10 0a1 1 0 1 0 0 2 1 1 0 0 0 0-2ZM15 6H4v9h.764c.55-.614 1.348-1 2.236-1 .82 0 1.563.33 2.105.862l.131.138h5.528l.115-.121.121-.115V6Zm3.52 3H17v5c.82 0 1.563.33 2.105.862l.131.138H20v-4.15L18.52 9Z"
            />
          </g>
        </svg>
      </NavBarButton>
      <NavBarButton
        text={'Comunidad'}
        selected={selectedButton === 'Comunidad'}
        onClick={() => handleButtonClick('Comunidad')}
      >
        <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24">
          <g fill="none" fillRule="evenodd">
            <path d="M24 0v24H0V0h24ZM12.594 23.258l-.012.002-.071.035-.02.004-.014-.004-.071-.036c-.01-.003-.019 0-.024.006l-.004.01-.017.428.005.02.01.013.104.074.015.004.012-.004.104-.074.012-.016.004-.017-.017-.427c-.002-.01-.009-.017-.016-.018Zm.264-.113-.014.002-.184.093-.01.01-.003.011.018.43.005.012.008.008.201.092c.012.004.023 0 .029-.008l.004-.014-.034-.614c-.003-.012-.01-.02-.02-.022Zm-.715.002a.023.023 0 0 0-.027.006l-.006.014-.034.614c0 .012.007.02.017.024l.015-.002.201-.093.01-.008.003-.011.018-.43-.003-.012-.01-.01-.184-.092Z" />
            <path
              fill={selectedButton === 'Comunidad' ? '#4CCD99' : '#1F1803'}
              d="M2.172 4.44A1 1 0 0 1 3 4h11a1 1 0 0 1 .928.629l.751 1.876.34-1.701A1 1 0 0 1 17 4h4a1 1 0 0 1 .98 1.196L21 10.1V18a2 2 0 0 1-2 2H6a2 2 0 0 1-2-2v-7.807L2.072 5.37a1 1 0 0 1 .1-.932ZM6 11v7h9v-7H6Zm11 0v7h2v-7h-2Zm2.18-2 .6-3h-1.96l-.6 3h1.96Zm-4.657 0-1.2-3H4.477l1.2 3h8.846ZM11 16a1 1 0 0 1 1-1h1a1 1 0 1 1 0 2h-1a1 1 0 0 1-1-1Z"
            />
          </g>
        </svg>
      </NavBarButton>
      <Link
        href="/"
        className={`flex h-fit items-center rounded-lg p-2 ${
          selectedButton === 'Escanea' ? 'bg-bpgreen' : 'bg-gray-400'
        }`}
        onClick={() => handleButtonClick('Escanea')}
      >
        <svg xmlns="http://www.w3.org/2000/svg" width="28" height="28" viewBox="0 0 24 24">
          <g fill="none" fillRule="nonzero">
            <path d="M24 0v24H0V0h24ZM12.593 23.258l-.011.002-.071.035-.02.004-.014-.004-.071-.035c-.01-.004-.019-.001-.024.005l-.004.01-.017.428.005.02.01.013.104.074.015.004.012-.004.104-.074.012-.016.004-.017-.017-.427c-.002-.01-.009-.017-.017-.018Zm.265-.113-.013.002-.185.093-.01.01-.003.011.018.43.005.012.008.007.201.093c.012.004.023 0 .029-.008l.004-.014-.034-.614c-.003-.012-.01-.02-.02-.022Zm-.715.002a.023.023 0 0 0-.027.006l-.006.014-.034.614c0 .012.007.02.017.024l.015-.002.201-.093.01-.008.004-.011.017-.43-.003-.012-.01-.01-.184-.092Z" />
            <path
              fill={selectedButton === 'Escanea' ? '#1F1803' : '#FFF5E0'}
              d="M4 15a1 1 0 0 1 .993.883L5 16v3h4a1 1 0 0 1 .117 1.993L9 21H5a2 2 0 0 1-1.995-1.85L3 19v-3a1 1 0 0 1 1-1Zm16 0a1 1 0 0 1 1 1v3a2 2 0 0 1-2 2h-4a1 1 0 1 1 0-2h4v-3a1 1 0 0 1 1-1Zm0-4a1 1 0 0 1 .117 1.993L20 13H4a1 1 0 0 1-.117-1.993L4 11h16ZM9 3a1 1 0 0 1 0 2H5v3a1 1 0 0 1-2 0V5a2 2 0 0 1 2-2h4Zm10 0a2 2 0 0 1 2 2v3a1 1 0 1 1-2 0V5h-4a1 1 0 1 1 0-2h4Z"
            />
          </g>
        </svg>
      </Link>
      <NavBarButton
        text={'Chefsito'}
        href="/chefsito"
        selected={selectedButton === 'Chefsito'}
        onClick={() => handleButtonClick('Chefsito')}
      >
        <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24">
          <g fill="none" fillRule="evenodd">
            <path d="M24,0 L24,24 L0,24 L0,0 L24,0 Z M12.5935,23.2578 L12.5819,23.2595 L12.5109,23.295 L12.4919,23.2987 L12.4767,23.295 L12.4057,23.2595 C12.3958,23.2564 12.387,23.259 12.3821,23.2649 L12.378,23.2758 L12.3609,23.7031 L12.3659,23.7235 L12.3769,23.7357 L12.4805,23.8097 L12.4953,23.8136 L12.5071,23.8097 L12.6107,23.7357 L12.6233,23.7197 L12.6267,23.7031 L12.6096,23.2758 C12.6076,23.2657 12.601,23.2593 12.5935,23.2578 Z M12.8584,23.1453 L12.8445,23.1473 L12.6598,23.2397 L12.6499,23.2499 L12.6472,23.2611 L12.6651,23.6906 L12.6699,23.7034 L12.6784,23.7105 L12.8793,23.8032 C12.8914,23.8069 12.9022,23.803 12.9078,23.7952 L12.9118,23.7812 L12.8777,23.1665 C12.8753,23.1546 12.8674,23.147 12.8584,23.1453 Z M12.143,23.1473 C12.1332,23.1424 12.1222,23.1453 12.1156,23.1526 L12.1099,23.1665 L12.0758,23.7812 C12.0751,23.7927 12.0828,23.8019 12.0926,23.8046 L12.1083,23.8032 L12.3092,23.7105 L12.3186,23.7024 L12.3225,23.6906 L12.3404,23.2611 L12.3372,23.2485 L12.3278,23.2397 L12.143,23.1473 Z" />
            <path
              fill={selectedButton === 'Chefsito' ? '#4CCD99' : '#1F1803'}
              d="M5,13.7437 C3.25202,13.1257 2,11.4597 2,9.5 C2,7.01472 4.01472,5 6.5,5 C6.97051,5 7.42503,5.07251 7.85243,5.20706 C8.75011,3.87649 10.2719,3 12,3 C13.7281,3 15.2499,3.8765 16.1476,5.20706 C16.575,5.07251 17.0295,5 17.5,5 C19.9853,5 22,7.01472 22,9.5 C22,11.4597 20.748,13.1257 19,13.7437 L19,18 C19,19.6569 17.6569,21 16,21 L8,21 C6.34315,21 5,19.6569 5,18 L5,13.7437 Z M9.21961,6.87051 C9.66657,5.77171 10.7444,5 12,5 C13.2556,5 14.3334,5.77171 14.7804,6.87051 C14.8903,7.14074 15.1128,7.3495 15.3894,7.44205 C15.6661,7.53461 15.9694,7.50173 16.2198,7.35203 C16.5935,7.12864 17.0302,7 17.5,7 C18.8807,7 20,8.11929 20,9.5 C20,10.7586 19.069,11.8015 17.8584,11.9746 C17.3658,12.0451 17,12.467 17,12.9646 L17,16 L7,16 L7,12.9646 C7,12.467 6.63417,12.0451 6.1416,11.9746 C4.931,11.8015 4,10.7586 4,9.5 C4,8.11929 5.11929,7 6.5,7 C6.9698,7 7.40651,7.12864 7.7802,7.35203 C8.03061,7.50173 8.33389,7.5346 8.61056,7.44205 C8.88723,7.3495 9.10968,7.14074 9.21961,6.87051 Z M17,18 C17,18.5523 16.5523,19 16,19 L8,19 C7.44772,19 7,18.5523 7,18 L17,18 Z"
            />
          </g>
        </svg>
      </NavBarButton>
      <NavBarButton text={'Perfil'} href="/perfil" selected={selectedButton === 'Perfil'} onClick={() => handleButtonClick('Perfil')}>
        <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24">
          <g fill="none" fillRule="evenodd">
            <path d="M24 0v24H0V0h24ZM12.594 23.258l-.012.002-.071.035-.02.004-.014-.004-.071-.036c-.01-.003-.019 0-.024.006l-.004.01-.017.428.005.02.01.013.104.074.015.004.012-.004.104-.074.012-.016.004-.017-.017-.427c-.002-.01-.009-.017-.016-.018Zm.264-.113-.014.002-.184.093-.01.01-.003.011.018.43.005.012.008.008.201.092c.012.004.023 0 .029-.008l.004-.014-.034-.614c-.003-.012-.01-.02-.02-.022Zm-.715.002a.023.023 0 0 0-.027.006l-.006.014-.034.614c0 .012.007.02.017.024l.015-.002.201-.093.01-.008.003-.011.018-.43-.003-.012-.01-.01-.184-.092Z" />
            <path
              fill={selectedButton === 'Perfil' ? '#4CCD99' : '#1F1803'}
              d="M12 2C6.477 2 2 6.477 2 12s4.477 10 10 10 10-4.477 10-10S17.523 2 12 2ZM8.5 9.5a3.5 3.5 0 1 1 7 0 3.5 3.5 0 0 1-7 0Zm9.758 7.484A7.985 7.985 0 0 1 12 20a7.985 7.985 0 0 1-6.258-3.016C7.363 15.821 9.575 15 12 15s4.637.821 6.258 1.984Z"
            />
          </g>
        </svg>
      </NavBarButton>
    </div>
  );
};

export default Navbar;
